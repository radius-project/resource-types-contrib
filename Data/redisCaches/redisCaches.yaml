namespace: Radius.Data
types:
  redisCaches:
    description: |
      The Radius.Data/redisCaches Resource Type deploys Redis, an in-memory, key/value store used as an application cache.
      
      To deploy a new Redis cache, add a RedisCaches resource to the application definition Bicep file.   

      param environment string
      resource redisCache 'Radius.Data/redisCaches@2025-08-01-preview' = {
        name: 'redisCache'
        properties: {
          environment: environment
        }
      }

      When `capacity` is not set, the value is assumed to be `S`(Small) in Recipes.

      To connect your application to the Redis Cache, establish a connection from the container to the Redis Cache as shown below. Once connected, all Redis Cache properties are automatically injected as environment variables into the container. 
      
      resource myContainer 'Radius.Compute/containers@2025-08-01-preview' = {
        name: 'myContainer'
        properties: {
          environment: environment
          application: myApplication.id
          containers: {
            frontend: {
              image: 'frontend:1.25' 
            }
          }
          connections: {
            redis:{
              source: redis.id
            }
          }
        }
      }
    apiVersions:
      '2025-08-01-preview':
        schema: 
          type: object
          properties:
            environment:
              type: string
              description: (Required) The Radius Environment ID. Typically set by the rad CLI. Typically value should be `environment`.
            application:
              type: string
              description: (Optional) The Radius Application ID. `myApplication.id` for example.
            capacity:
              type: string
              enum: [S, M, L]
              description: (Optional) The capacity of the Redis server.
            host:
              type: string
              description: (Read-Only) The hostname used to connect to the Redis server.
              readOnly: true
            port:
              type: integer
              description: (Read-Only) The port used to connected to the Redis server.
              readOnly: true
            tls:
              type: boolean
              description: (Read-Only) Set to true if the Redis server requires a TLS/SSL connection.
              readOnly: true
            username:
              type: string
              description: (Read-Only) The username used to connected to the Redis server.
              readOnly: true
            password:
              type: string
              description: (Read-Only) The password used to connected to the Redis server.
              readOnly: true
          required:
              - environment
